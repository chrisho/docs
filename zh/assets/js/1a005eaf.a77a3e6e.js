"use strict";(self.webpackChunkharvester_docs=self.webpackChunkharvester_docs||[]).push([[8329],{33017:(e,t)=>{t.T=void 0,t.T=function(e){return e?`\n\n${e}\n\n`:""}},76663:(e,t)=>{function s(e,t){return e.format?e.format:e.allOf?"string"==typeof e.allOf[0]&&e.allOf[0].includes("circular")?e.allOf[0]:"object":e.oneOf||e.anyOf?"object":"object"===e.type||"array"===e.type?e.xml?.name??e.type:e.title??e.type}t.A4=t.uc=void 0,t.uc=function(e,t){return e.items?s(e.items)+"[]":s(e)??""},t.A4=function e(t){if(!t)return;if(t.items&&void 0===t.minItems&&void 0===t.maxItems)return e(t.items);let s=[];if(t.items&&t.items.enum&&t.items.enum&&s.push(`[${t.items.enum.map((e=>`\`${e}\``)).join(", ")}]`),t.minLength||t.maxLength){let e,i,a="";t.minLength&&t.minLength>1&&(e=`\`>= ${t.minLength} characters\``),t.minLength&&1===t.minLength&&(e="`non-empty`"),t.maxLength&&(i=`\`<= ${t.maxLength} characters\``),e&&!i&&(a+=e),i&&!e&&(a+=i),e&&i&&(a+=`${e} and ${i}`),s.push(a)}if(t.minimum||t.maximum||"number"==typeof t.exclusiveMinimum||"number"==typeof t.exclusiveMaximum){let e,i,a="";"number"==typeof t.exclusiveMinimum?e=`\`> ${t.exclusiveMinimum}\``:t.minimum&&!t.exclusiveMinimum?e=`\`>= ${t.minimum}\``:t.minimum&&!0===t.exclusiveMinimum&&(e=`\`> ${t.minimum}\``),"number"==typeof t.exclusiveMaximum?i=`\`< ${t.exclusiveMaximum}\``:t.maximum&&!t.exclusiveMaximum?i=`\`<= ${t.maximum}\``:t.maximum&&!0===t.exclusiveMaximum&&(i=`\`< ${t.maximum}\``),e&&!i&&(a+=e),i&&!e&&(a+=i),e&&i&&(a+=`${e} and ${i}`),s.push(a)}t.pattern&&s.push(`Value must match regular expression \`${t.pattern}\``);const i=t;if(i.mapping){const e=Object.keys(i.mapping);s.push(`[${e.map((e=>`\`${e}\``)).join(", ")}]`)}return t.enum&&s.push(`[${t.enum.map((e=>`\`${e}\``)).join(", ")}]`),t.minItems&&s.push(`\`>= ${t.minItems}\``),t.maxItems&&s.push(`\`<= ${t.maxItems}\``),0!==s.length?"**Possible values:** "+s.join(", "):void 0}},99325:(e,t)=>{function s(e){return Array.isArray(e)?e.filter((e=>void 0!==e)).join(""):e??""}t.toString=t.lo=void 0,t.lo=function(e,t){if(e){return s(t(e))}return""},t.toString=function(e){return"string"==typeof e?e:null!=e?Array.isArray(e)?`[${e.join(", ")}]`:e+"":void 0}},68973:(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.setAccept=t.slice=void 0;const i=s(67465);t.slice=(0,i.createSlice)({name:"accept",initialState:{},reducers:{setAccept:(e,t)=>{e.value=t.payload}}}),t.setAccept=t.slice.actions.setAccept,t.default=t.slice.reducer},96978:(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.setContentType=t.slice=void 0;const i=s(67465);t.slice=(0,i.createSlice)({name:"contentType",initialState:{},reducers:{setContentType:(e,t)=>{e.value=t.payload}}}),t.setContentType=t.slice.actions.setContentType,t.default=t.slice.reducer},47735:function(e,t,s){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=i(s(67294)),n=i(s(91262)),r=s(41285);function o(e){switch(e.toLowerCase()){case"get":return"primary";case"post":return"success";case"delete":return"danger";case"put":return"info";case"patch":return"warning";case"head":case"event":return"secondary";default:return}}t.default=function(e){let{method:t,path:s}=e,i=(0,r.useTypedSelector)((e=>e.server.value)),l="";return a.default.createElement(a.default.Fragment,null,a.default.createElement("pre",{className:"openapi__method-endpoint"},a.default.createElement("span",{className:"badge badge--"+o(t)},t.toUpperCase())," ",a.default.createElement("h2",{className:"openapi__method-endpoint-path"},(i&&i.variables&&(l=i.url.replace(/\/$/,""),Object.keys(i.variables).forEach((e=>{l=l.replace(`{${e}}`,i.variables?.[e].default??"")}))),a.default.createElement(n.default,null,(()=>l.length?l:i&&i.url?i.url:void 0))),`${s.replace(/{([a-z0-9-_]+)}/gi,":$1")}`)),a.default.createElement("div",{className:"openapi__divider"}))}},36618:function(e,t,s){var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=i(s(67294)),n=i(s(39960)),r=s(41285);t.default=function(e){const t=(0,r.useTypedSelector)((e=>e.auth.options)),s=(0,r.useTypedSelector)((e=>e.auth.selected)),i=`/${e.infoPath}#authentication`;if(void 0===s)return null;if(void 0===t[s]?.[0]?.type)return null;const o=t[s];return a.default.createElement("details",{className:"openapi-security__details",open:!1},a.default.createElement("summary",{className:"openapi-security__summary-container"},a.default.createElement("h4",{className:"openapi-security__summary-header"},"Authorization: ",o[0].name??o[0].type)),o.map((e=>{const t="http"===e.type,r="apiKey"===e.type,o="oauth2"===e.type,l="openIdConnect"===e.type;if(t){if("bearer"===e.scheme){const{name:t,key:s,type:r,scopes:o,...l}=e;return a.default.createElement(a.default.Fragment,{key:e.key},a.default.createElement("pre",{style:{display:"flex",flexDirection:"column",background:"var(--openapi-card-background-color)"}},a.default.createElement("span",null,a.default.createElement("strong",null,"name:")," ",a.default.createElement(n.default,{to:i},t??s)),a.default.createElement("span",null,a.default.createElement("strong",null,"type: "),r),o&&o.length>0&&a.default.createElement("span",null,a.default.createElement("strong",null,"scopes: "),a.default.createElement("code",null,e.scopes.length>0?e.scopes.toString():"[]")),Object.keys(l).map(((e,t)=>a.default.createElement("span",{key:e},a.default.createElement("strong",null,e,": "),"object"==typeof l[e]?JSON.stringify(l[e],null,2):String(l[e]))))))}if("basic"===e.scheme){const{name:t,key:s,type:r,scopes:o,...l}=e;return a.default.createElement(a.default.Fragment,{key:e.key},a.default.createElement("pre",{style:{display:"flex",flexDirection:"column",background:"var(--openapi-card-background-color)"}},a.default.createElement("span",null,a.default.createElement("strong",null,"name:")," ",a.default.createElement(n.default,{to:i},t??s)),a.default.createElement("span",null,a.default.createElement("strong",null,"type: "),r),o&&o.length>0&&a.default.createElement("span",null,a.default.createElement("strong",null,"scopes: "),a.default.createElement("code",null,e.scopes.length>0?e.scopes.toString():"[]")),Object.keys(l).map(((e,t)=>a.default.createElement("span",{key:e},a.default.createElement("strong",null,e,": "),"object"==typeof l[e]?JSON.stringify(l[e],null,2):String(l[e]))))))}return a.default.createElement(a.default.Fragment,{key:e.key},a.default.createElement("pre",{style:{display:"flex",flexDirection:"column",background:"var(--openapi-card-background-color)"}},a.default.createElement("span",null,a.default.createElement("strong",null,"name:")," ",a.default.createElement(n.default,{to:i},e.name??e.key)),a.default.createElement("span",null,a.default.createElement("strong",null,"type: "),e.type),a.default.createElement("span",null,a.default.createElement("strong",null,"in: "),e.in)))}if(r){const{name:t,key:s,type:r,scopes:o,...l}=e;return a.default.createElement(a.default.Fragment,{key:e.key},a.default.createElement("pre",{style:{display:"flex",flexDirection:"column",background:"var(--openapi-card-background-color)"}},a.default.createElement("span",null,a.default.createElement("strong",null,"name:")," ",a.default.createElement(n.default,{to:i},t??s)),a.default.createElement("span",null,a.default.createElement("strong",null,"type: "),r),o&&o.length>0&&a.default.createElement("span",null,a.default.createElement("strong",null,"scopes: "),a.default.createElement("code",null,e.scopes.length>0?e.scopes.toString():"[]")),Object.keys(l).map(((e,t)=>a.default.createElement("span",{key:e},a.default.createElement("strong",null,e,": "),"object"==typeof l[e]?JSON.stringify(l[e],null,2):String(l[e]))))))}if(o){const{name:t,key:r,type:o,scopes:l,flows:c,...m}=e;return a.default.createElement(a.default.Fragment,{key:s},a.default.createElement("pre",{style:{display:"flex",flexDirection:"column",background:"var(--openapi-card-background-color)"}},a.default.createElement("span",null,a.default.createElement("strong",null,"name:")," ",a.default.createElement(n.default,{to:i},t??r)),a.default.createElement("span",null,a.default.createElement("strong",null,"type: "),o),l&&l.length>0&&a.default.createElement("span",null,a.default.createElement("strong",null,"scopes: "),a.default.createElement("code",null,e.scopes.length>0?e.scopes.toString():"[]")),Object.keys(m).map(((e,t)=>a.default.createElement("span",{key:e},a.default.createElement("strong",null,e,": "),"object"==typeof m[e]?JSON.stringify(m[e],null,2):String(m[e])))),c&&a.default.createElement("span",null,a.default.createElement("code",null,a.default.createElement("strong",null,"flows: "),JSON.stringify(c,null,2)))))}if(l){const{name:t,key:s,scopes:r,type:o,...l}=e;return a.default.createElement(a.default.Fragment,{key:e.key},a.default.createElement("pre",{style:{display:"flex",flexDirection:"column",background:"var(--openapi-card-background-color)"}},a.default.createElement("span",null,a.default.createElement("strong",null,"name:")," ",a.default.createElement(n.default,{to:i},t??s)),a.default.createElement("span",null,a.default.createElement("strong",null,"type: "),o),r&&r.length>0&&a.default.createElement("span",null,a.default.createElement("strong",null,"scopes: "),a.default.createElement("code",null,e.scopes.length>0?e.scopes.toString():"[]")),Object.keys(l).map(((e,t)=>a.default.createElement("span",{key:e},a.default.createElement("strong",null,e,": "),"object"==typeof l[e]?JSON.stringify(l[e],null,2):String(l[e]))))))}})))}},41285:(e,t,s)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.useTypedSelector=t.useTypedDispatch=void 0;const i=s(78135);t.useTypedDispatch=()=>(0,i.useDispatch)(),t.useTypedSelector=i.useSelector},36924:(e,t,s)=>{s.d(t,{Z:()=>p});var i=s(83117),a=s(67294),n=s(12466),r=s(70989),o=s(72389),l=s(92503),c=s(86010);function m(e){let{className:t,block:s,selectedValue:r,selectValue:o,tabValues:m}=e;const u=[],{blockElementScrollPositionUntilNextRender:d}=(0,n.o5)(),p=e=>{const t=e.currentTarget,s=u.indexOf(t),i=m[s].value;i!==r&&(d(t),o(i))},h=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const s=u.indexOf(e.currentTarget)+1;t=u[s]??u[0];break}case"ArrowLeft":{const s=u.indexOf(e.currentTarget)-1;t=u[s]??u[u.length-1];break}}t?.focus()},f=(0,a.useRef)(null),[y,g]=(0,a.useState)(!1);(0,a.useEffect)((()=>{const e=new ResizeObserver((e=>{for(let t of e)t.target.offsetWidth<t.target.scrollWidth?g(!0):g(!1)}));return e.observe(f.current),()=>{e.disconnect()}}),[]);return a.createElement("div",{className:"openapi-tabs__response-header-section"},a.createElement(l.Z,{as:"h2",id:"responses",className:"openapi-tabs__response-header"},"Responses"),a.createElement("div",{className:"openapi-tabs__response-container"},y&&a.createElement("button",{className:"openapi-tabs__arrow left",onClick:()=>{f.current.scrollLeft-=90}}),a.createElement("ul",{ref:f,role:"tablist","aria-orientation":"horizontal",className:(0,c.default)("openapi-tabs__response-list-container","tabs",{"tabs--block":s},t)},m.map((e=>{let{value:t,label:s,attributes:n}=e;return a.createElement("li",(0,i.Z)({role:"tab",tabIndex:r===t?0:-1,"aria-selected":r===t,key:t,ref:e=>u.push(e),onKeyDown:h,onClick:p},n,{className:(0,c.default)("tabs__item","openapi-tabs__response-code-item",n?.className,parseInt(t)>=400?"danger":parseInt(t)>=200&&parseInt(t)<300?"success":"info",{active:r===t})}),s??t)}))),y&&a.createElement("button",{className:"openapi-tabs__arrow right",onClick:()=>{f.current.scrollLeft+=90}})))}function u(e){let{lazy:t,children:s,selectedValue:i}=e;if(s=Array.isArray(s)?s:[s],t){const e=s.find((e=>e.props.value===i));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},s.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==i}))))}function d(e){const t=(0,r.Y)(e);return a.createElement("div",{className:"openapi-tabs__container"},a.createElement(m,(0,i.Z)({},e,t)),a.createElement(u,(0,i.Z)({},e,t)))}function p(e){const t=(0,o.default)();return a.createElement(d,(0,i.Z)({key:String(t)},e))}},92596:(e,t,s)=>{s(67294),s(72389),s(85564)},73770:(e,t,s)=>{s.d(t,{Z:()=>f});var i=s(83117),a=s(67294),n=s(12466),r=s(70989),o=s(72389),l=s(68973),c=s(96978),m=s(41285),u=s(86010);function d(e){let{className:t,block:s,selectedValue:r,selectValue:o,tabValues:d,schemaType:p}=e;const h=[],{blockElementScrollPositionUntilNextRender:f}=(0,n.o5)(),y=(0,m.useTypedDispatch)(),g="request"===p?.toLowerCase(),[b,v]=(0,a.useState)(r),k=(0,m.useTypedSelector)((e=>e.contentType.value)),q=(0,m.useTypedSelector)((e=>e.accept.value));(0,a.useEffect)((()=>{h.length>1&&v(g?k:q)}),[k,q]);const _=e=>{e.preventDefault();const t=e.currentTarget,s=h.indexOf(t),i=d[s].value;i!==b&&(y(g?(0,c.setContentType)(i):(0,l.setAccept)(i)),f(t),o(i))},w=e=>{let t=null;switch(e.key){case"Enter":_(e);break;case"ArrowRight":{const s=h.indexOf(e.currentTarget)+1;t=h[s]??h[0];break}case"ArrowLeft":{const s=h.indexOf(e.currentTarget)-1;t=h[s]??h[h.length-1];break}}t?.focus()},T=(0,a.useRef)(null),[N,j]=(0,a.useState)(!1);(0,a.useEffect)((()=>{const e=new ResizeObserver((e=>{for(let t of e)t.target.offsetWidth<t.target.scrollWidth?j(!0):j(!1)}));return e.observe(T.current),()=>{e.disconnect()}}),[]);return a.createElement("div",{className:"tabs__container"},a.createElement("div",{className:"openapi-tabs__mime-container"},N&&a.createElement("button",{className:(0,u.default)("openapi-tabs__arrow","left"),onClick:()=>{T.current.scrollLeft-=90}}),a.createElement("ul",{ref:T,role:"tablist","aria-orientation":"horizontal",className:(0,u.default)("openapi-tabs__mime-list-container","tabs",{"tabs--block":s},t)},d.map((e=>{let{value:t,label:s,attributes:n}=e;return a.createElement("li",(0,i.Z)({role:"tab",tabIndex:b===t?0:-1,"aria-selected":b===t,key:t,ref:e=>h.push(e),onKeyDown:w,onFocus:_,onClick:e=>_(e)},n,{className:(0,u.default)("tabs__item","openapi-tabs__mime-item",n?.className,{active:b===t})}),s??t)}))),N&&a.createElement("button",{className:(0,u.default)("openapi-tabs__arrow","right"),onClick:()=>{T.current.scrollLeft+=90}})))}function p(e){let{lazy:t,children:s,selectedValue:i}=e;if(s=Array.isArray(s)?s:[s],t){const e=s.find((e=>e.props.value===i));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},s.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==i}))))}function h(e){const t=(0,r.Y)(e);return a.createElement("div",{className:"tabs-container"},a.createElement(d,(0,i.Z)({},e,t)),a.createElement(p,(0,i.Z)({},e,t)))}function f(e){const t=(0,o.default)();return a.createElement(h,(0,i.Z)({key:String(t)},e))}},68978:(e,t,s)=>{s.d(t,{Z:()=>d});var i=s(67294),a=s(32924),n=s(1852),r=s(85162),o=s(33017),l=s(76663),c=s(99325),m=s(60214),u=s(85956);const d=function(e){let{param:{description:t,example:s,examples:d,name:p,required:h,schema:f}}=e;f&&f?.type||(f={type:"any"});const y=(0,c.lo)(f,(e=>i.createElement("span",{className:"openapi-schema__type"}," ",(0,l.uc)(e)))),g=(0,c.lo)(h,(()=>i.createElement("span",{className:"openapi-schema__required"},"required"))),b=(0,c.lo)((0,l.A4)(f),(e=>i.createElement("div",null,i.createElement(m.D,{children:(0,o.T)(e),rehypePlugins:[u.Z]})))),v=(0,c.lo)(t,(e=>i.createElement("div",null,i.createElement(m.D,{children:(0,o.T)(e),components:{pre:"div",code(e){let{node:t,inline:s,className:n,children:r,...o}=e;const l=/language-(\w+)/.exec(n||"");return s?i.createElement("code",null,r):!s&&l?i.createElement(a.Z,{className:n},r):i.createElement(a.Z,null,r)}},rehypePlugins:[u.Z]})))),k=(0,c.lo)(f&&f.items?f.items.default:f?f.default:void 0,(e=>i.createElement("div",null,i.createElement(m.D,{children:`**Default value:** \`${e}\``})))),q=(0,c.lo)((0,c.toString)(s),(e=>i.createElement("div",null,i.createElement("strong",null,"Example: "),e))),_=(0,c.lo)(d,(e=>{const t=Object.entries(e);return i.createElement(i.Fragment,null,i.createElement("strong",null,"Examples:"),i.createElement(n.Z,null,t.map((e=>{let[t,s]=e;return i.createElement(r.Z,{value:t,label:t},s.summary&&i.createElement("p",null,s.summary),s.description&&i.createElement("p",null,i.createElement("strong",null,"Description: "),i.createElement("span",null,s.description)),i.createElement("p",null,i.createElement("strong",null,"Example: "),i.createElement("code",null,s.value)))}))))}));return i.createElement("div",{className:"openapi-params__list-item"},i.createElement("span",{className:"openapi-schema__container"},i.createElement("strong",{className:"openapi-schema__property"},p),y,h&&i.createElement("span",{className:"openapi-schema__divider"}),g),b,k,v,q,_)}},12582:(e,t,s)=>{s.d(t,{Z:()=>n});var i=s(67294),a=s(32924);const n=function(e){let{responseExample:t,language:s}=e;return i.createElement("div",{className:"openapi-code__response-samples-container"},i.createElement(a.Z,{language:s||"json"},t))}},20953:(e,t,s)=>{s.d(t,{Z:()=>m});var i=s(67294),a=s(32924),n=s(86010),r=s(33017),o=s(99325),l=s(60214),c=s(85956);const m=function(e){let t,s,m,u,{children:d,collapsible:p,name:h,qualifierMessage:f,required:y,schemaName:g,schema:b}=e;b&&(t=b.deprecated,s=b.description,m=b.default,u=b.nullable);const v=(0,o.lo)(Array.isArray(y)?y.includes(h):y,(()=>i.createElement("span",{className:"openapi-schema__required"},"required"))),k=(0,o.lo)(t,(()=>i.createElement("span",{className:"openapi-schema__deprecated"},"deprecated"))),q=(0,o.lo)(u,(()=>i.createElement("span",{className:"openapi-schema__nullable"},"nullable"))),_=(0,o.lo)(s,(e=>i.createElement("div",null,i.createElement(l.D,{children:(0,r.T)(e),components:{pre:"div",code(e){let{node:t,inline:s,className:n,children:r,...o}=e;const l=/language-(\w+)/.exec(n||"");return s?i.createElement("code",null,r):!s&&l?i.createElement(a.Z,{className:n},r):i.createElement(a.Z,null,r)}},rehypePlugins:[c.Z]})))),w=(0,o.lo)(f,(e=>i.createElement("div",null,i.createElement(l.D,{children:(0,r.T)(e),rehypePlugins:[c.Z]})))),T=(0,o.lo)("boolean"==typeof m?m.toString():m,(e=>i.createElement("div",{className:""},i.createElement(l.D,{children:`**Default value:** \`${e}\``})))),N=i.createElement("div",null,i.createElement("span",{className:"openapi-schema__container"},i.createElement("strong",{className:(0,n.default)("openapi-schema__property",{"openapi-schema__strikethrough":t})},h),i.createElement("span",{className:"openapi-schema__name"}," ",g),(u||y||t)&&i.createElement("span",{className:"openapi-schema__divider"}),q,!t&&v,k),w,T,_,d??d);return i.createElement("div",{className:"openapi-schema__list-item"},p?d:N)}},1852:(e,t,s)=>{s.d(t,{Z:()=>h});var i=s(83117),a=s(67294),n=s(12466),r=s(70989),o=s(72389),l=s(86010),c=s(85564),m=s.n(c);function u(e){let{className:t,block:s,selectedValue:r,selectValue:o,tabValues:c}=e;const m=[],{blockElementScrollPositionUntilNextRender:u}=(0,n.o5)(),d=e=>{const t=e.currentTarget,s=m.indexOf(t),i=c[s].value;i!==r&&(u(t),o(i))},p=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const s=m.indexOf(e.currentTarget)+1;t=m[s]??m[0];break}case"ArrowLeft":{const s=m.indexOf(e.currentTarget)-1;t=m[s]??m[m.length-1];break}}t?.focus()},h=(0,a.useRef)(null),[f,y]=(0,a.useState)(!1);(0,a.useEffect)((()=>{const e=new ResizeObserver((e=>{for(let t of e)t.target.offsetWidth<t.target.scrollWidth?y(!0):y(!1)}));return e.observe(h.current),()=>{e.disconnect()}}),[]);return a.createElement("div",{className:"openapi-tabs__schema-tabs-container"},f&&a.createElement("button",{className:"openapi-tabs__arrow left",onClick:()=>{h.current.scrollLeft-=90}}),a.createElement("ul",{ref:h,role:"tablist","aria-orientation":"horizontal",className:(0,l.default)("openapi-tabs__schema-list-container","tabs",{"tabs--block":s},t)},c.map((e=>{let{value:t,label:s,attributes:n}=e;return a.createElement("li",(0,i.Z)({role:"tab",tabIndex:r===t?0:-1,"aria-selected":r===t,key:t,ref:e=>m.push(e),onKeyDown:p,onClick:d},n,{className:(0,l.default)("tabs__item","openapi-tabs__schema-item",n?.className,{active:r===t})}),a.createElement("span",{className:"openapi-tabs__schema-label"},s??t))}))),f&&a.createElement("button",{className:"openapi-tabs__arrow right",onClick:()=>{h.current.scrollLeft+=90}}))}function d(e){let{lazy:t,children:s,selectedValue:i}=e;s=Array.isArray(s)?s:[s];const n=m()(s);if(t){const e=n.find((e=>e.props.value===i));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},s.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==i}))))}function p(e){const t=(0,r.Y)(e);return a.createElement("div",{className:"openapi-tabs__schema-container"},a.createElement(u,(0,i.Z)({},e,t)),a.createElement(d,(0,i.Z)({},e,t)))}function h(e){const t=(0,o.default)();return a.createElement(p,(0,i.Z)({key:String(t)},e))}},34218:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>v,contentTitle:()=>g,default:()=>w,frontMatter:()=>y,metadata:()=>b,toc:()=>k});var i=s(83117),a=(s(67294),s(3905)),n=s(36924),r=(s(92596),s(47735)),o=s.n(r),l=s(36618),c=s.n(l),m=s(73770),u=s(68978),d=s(12582),p=s(20953),h=s(1852),f=s(85162);const y={id:"list-key-pair-for-all-namespaces",title:"listKeyPairForAllNamespaces",description:"Get a list of all KeyPair objects.",sidebar_label:"listKeyPairForAllNamespaces",hide_title:!0,hide_table_of_contents:!0,api:{description:"Get a list of all KeyPair objects.",tags:["SSH Keys"],operationId:"listKeyPairForAllNamespaces",responses:{200:{description:"OK",content:{"application/json":{schema:{description:"KeyPairList is a list of KeyPair resources",type:"object",required:["metadata","items","kind","apiVersion"],properties:{apiVersion:{description:"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",type:"string"},items:{type:"array",items:{default:{},type:"object",required:["spec","kind","apiVersion"],properties:{apiVersion:{description:"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",type:"string"},kind:{description:"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",type:"string"},metadata:{default:{},description:"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",type:"object",required:["name"],properties:{name:{description:"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",type:"string"},namespace:{description:'Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces',type:"string"}}},spec:{default:{},type:"object",required:["publicKey"],properties:{publicKey:{type:"string",default:""}}},status:{default:{},type:"object",properties:{conditions:{type:"array",items:{default:{},type:"object",required:["type","status"],properties:{lastTransitionTime:{description:"Last time the condition transitioned from one status to another.",type:"string"},lastUpdateTime:{description:"The last time this condition was updated.",type:"string"},message:{description:"Human-readable message indicating details about last transition",type:"string"},reason:{description:"The reason for the condition's last transition.",type:"string"},status:{description:"Status of the condition, one of True, False, Unknown.",type:"string",default:""},type:{description:"Type of the condition.",type:"string",default:""}}}},fingerPrint:{type:"string"}}}}}},kind:{description:"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",type:"string"},metadata:{default:{},description:"ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",type:"object",properties:{continue:{description:"continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",type:"string"},remainingItemCount:{description:"remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",type:"integer",format:"int64"},resourceVersion:{description:"String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",type:"string"},selfLink:{description:"Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",type:"string"}}}}}},"application/yaml":{schema:{description:"KeyPairList is a list of KeyPair resources",type:"object",required:["metadata","items","kind","apiVersion"],properties:{apiVersion:{description:"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",type:"string"},items:{type:"array",items:{default:{},type:"object",required:["spec","kind","apiVersion"],properties:{apiVersion:{description:"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",type:"string"},kind:{description:"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",type:"string"},metadata:{default:{},description:"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",type:"object",required:["name"],properties:{name:{description:"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",type:"string"},namespace:{description:'Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces',type:"string"}}},spec:{default:{},type:"object",required:["publicKey"],properties:{publicKey:{type:"string",default:""}}},status:{default:{},type:"object",properties:{conditions:{type:"array",items:{default:{},type:"object",required:["type","status"],properties:{lastTransitionTime:{description:"Last time the condition transitioned from one status to another.",type:"string"},lastUpdateTime:{description:"The last time this condition was updated.",type:"string"},message:{description:"Human-readable message indicating details about last transition",type:"string"},reason:{description:"The reason for the condition's last transition.",type:"string"},status:{description:"Status of the condition, one of True, False, Unknown.",type:"string",default:""},type:{description:"Type of the condition.",type:"string",default:""}}}},fingerPrint:{type:"string"}}}}}},kind:{description:"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",type:"string"},metadata:{default:{},description:"ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",type:"object",properties:{continue:{description:"continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",type:"string"},remainingItemCount:{description:"remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",type:"integer",format:"int64"},resourceVersion:{description:"String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",type:"string"},selfLink:{description:"Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",type:"string"}}}}}},"application/json;stream=watch":{schema:{description:"KeyPairList is a list of KeyPair resources",type:"object",required:["metadata","items","kind","apiVersion"],properties:{apiVersion:{description:"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",type:"string"},items:{type:"array",items:{default:{},type:"object",required:["spec","kind","apiVersion"],properties:{apiVersion:{description:"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",type:"string"},kind:{description:"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",type:"string"},metadata:{default:{},description:"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",type:"object",required:["name"],properties:{name:{description:"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",type:"string"},namespace:{description:'Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces',type:"string"}}},spec:{default:{},type:"object",required:["publicKey"],properties:{publicKey:{type:"string",default:""}}},status:{default:{},type:"object",properties:{conditions:{type:"array",items:{default:{},type:"object",required:["type","status"],properties:{lastTransitionTime:{description:"Last time the condition transitioned from one status to another.",type:"string"},lastUpdateTime:{description:"The last time this condition was updated.",type:"string"},message:{description:"Human-readable message indicating details about last transition",type:"string"},reason:{description:"The reason for the condition's last transition.",type:"string"},status:{description:"Status of the condition, one of True, False, Unknown.",type:"string",default:""},type:{description:"Type of the condition.",type:"string",default:""}}}},fingerPrint:{type:"string"}}}}}},kind:{description:"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",type:"string"},metadata:{default:{},description:"ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",type:"object",properties:{continue:{description:"continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",type:"string"},remainingItemCount:{description:"remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",type:"integer",format:"int64"},resourceVersion:{description:"String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",type:"string"},selfLink:{description:"Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",type:"string"}}}}}}}},401:{description:"Unauthorized",content:{"application/json":{schema:{type:"string"}},"application/yaml":{schema:{type:"string"}},"application/json;stream=watch":{schema:{type:"string"}}}}},parameters:[{description:"The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",name:"continue",in:"query",schema:{type:"string",uniqueItems:!0}},{description:"A selector to restrict the list of returned objects by their fields. Defaults to everything.",name:"fieldSelector",in:"query",schema:{type:"string",uniqueItems:!0}},{description:"If true, partially initialized resources are included in the response.",name:"includeUninitialized",in:"query",schema:{type:"boolean",uniqueItems:!0}},{description:"A selector to restrict the list of returned objects by their labels. Defaults to everything",name:"labelSelector",in:"query",schema:{type:"string",uniqueItems:!0}},{description:"limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",name:"limit",in:"query",schema:{type:"integer",uniqueItems:!0}},{description:"When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",name:"resourceVersion",in:"query",schema:{type:"string",uniqueItems:!0}},{description:"TimeoutSeconds for the list/watch call.",name:"timeoutSeconds",in:"query",schema:{type:"integer",uniqueItems:!0}},{description:"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",name:"watch",in:"query",schema:{type:"boolean",uniqueItems:!0}}],method:"get",path:"/apis/harvesterhci.io/v1beta1/keypairs",servers:[{url:"//harvester.api.server"}],info:{title:"Harvester APIs",version:"v1beta1"},postman:{name:"list Key Pair For All Namespaces",description:{content:"Get a list of all KeyPair objects.",type:"text/plain"},url:{path:["apis","harvesterhci.io","v1beta1","keypairs"],host:["{{baseUrl}}"],query:[{disabled:!1,description:{content:"The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",type:"text/plain"},key:"continue",value:""},{disabled:!1,description:{content:"A selector to restrict the list of returned objects by their fields. Defaults to everything.",type:"text/plain"},key:"fieldSelector",value:""},{disabled:!1,description:{content:"If true, partially initialized resources are included in the response.",type:"text/plain"},key:"includeUninitialized",value:""},{disabled:!1,description:{content:"A selector to restrict the list of returned objects by their labels. Defaults to everything",type:"text/plain"},key:"labelSelector",value:""},{disabled:!1,description:{content:"limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",type:"text/plain"},key:"limit",value:""},{disabled:!1,description:{content:"When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",type:"text/plain"},key:"resourceVersion",value:""},{disabled:!1,description:{content:"TimeoutSeconds for the list/watch call.",type:"text/plain"},key:"timeoutSeconds",value:""},{disabled:!1,description:{content:"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",type:"text/plain"},key:"watch",value:""}],variable:[]},header:[{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"api/harvester-apis",custom_edit_url:null,hide_send_button:!0},g=void 0,b={unversionedId:"api/list-key-pair-for-all-namespaces",id:"api/list-key-pair-for-all-namespaces",title:"listKeyPairForAllNamespaces",description:"Get a list of all KeyPair objects.",source:"@site/docs/api/list-key-pair-for-all-namespaces.api.mdx",sourceDirName:"api",slug:"/api/list-key-pair-for-all-namespaces",permalink:"/zh/dev/api/list-key-pair-for-all-namespaces",draft:!1,editUrl:null,tags:[],version:"current",lastUpdatedAt:1692375808,formattedLastUpdatedAt:"2023\u5e748\u670818\u65e5",frontMatter:{id:"list-key-pair-for-all-namespaces",title:"listKeyPairForAllNamespaces",description:"Get a list of all KeyPair objects.",sidebar_label:"listKeyPairForAllNamespaces",hide_title:!0,hide_table_of_contents:!0,api:{description:"Get a list of all KeyPair objects.",tags:["SSH Keys"],operationId:"listKeyPairForAllNamespaces",responses:{200:{description:"OK",content:{"application/json":{schema:{description:"KeyPairList is a list of KeyPair resources",type:"object",required:["metadata","items","kind","apiVersion"],properties:{apiVersion:{description:"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",type:"string"},items:{type:"array",items:{default:{},type:"object",required:["spec","kind","apiVersion"],properties:{apiVersion:{description:"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",type:"string"},kind:{description:"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",type:"string"},metadata:{default:{},description:"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",type:"object",required:["name"],properties:{name:{description:"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",type:"string"},namespace:{description:'Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces',type:"string"}}},spec:{default:{},type:"object",required:["publicKey"],properties:{publicKey:{type:"string",default:""}}},status:{default:{},type:"object",properties:{conditions:{type:"array",items:{default:{},type:"object",required:["type","status"],properties:{lastTransitionTime:{description:"Last time the condition transitioned from one status to another.",type:"string"},lastUpdateTime:{description:"The last time this condition was updated.",type:"string"},message:{description:"Human-readable message indicating details about last transition",type:"string"},reason:{description:"The reason for the condition's last transition.",type:"string"},status:{description:"Status of the condition, one of True, False, Unknown.",type:"string",default:""},type:{description:"Type of the condition.",type:"string",default:""}}}},fingerPrint:{type:"string"}}}}}},kind:{description:"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",type:"string"},metadata:{default:{},description:"ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",type:"object",properties:{continue:{description:"continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",type:"string"},remainingItemCount:{description:"remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",type:"integer",format:"int64"},resourceVersion:{description:"String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",type:"string"},selfLink:{description:"Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",type:"string"}}}}}},"application/yaml":{schema:{description:"KeyPairList is a list of KeyPair resources",type:"object",required:["metadata","items","kind","apiVersion"],properties:{apiVersion:{description:"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",type:"string"},items:{type:"array",items:{default:{},type:"object",required:["spec","kind","apiVersion"],properties:{apiVersion:{description:"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",type:"string"},kind:{description:"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",type:"string"},metadata:{default:{},description:"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",type:"object",required:["name"],properties:{name:{description:"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",type:"string"},namespace:{description:'Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces',type:"string"}}},spec:{default:{},type:"object",required:["publicKey"],properties:{publicKey:{type:"string",default:""}}},status:{default:{},type:"object",properties:{conditions:{type:"array",items:{default:{},type:"object",required:["type","status"],properties:{lastTransitionTime:{description:"Last time the condition transitioned from one status to another.",type:"string"},lastUpdateTime:{description:"The last time this condition was updated.",type:"string"},message:{description:"Human-readable message indicating details about last transition",type:"string"},reason:{description:"The reason for the condition's last transition.",type:"string"},status:{description:"Status of the condition, one of True, False, Unknown.",type:"string",default:""},type:{description:"Type of the condition.",type:"string",default:""}}}},fingerPrint:{type:"string"}}}}}},kind:{description:"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",type:"string"},metadata:{default:{},description:"ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",type:"object",properties:{continue:{description:"continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",type:"string"},remainingItemCount:{description:"remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",type:"integer",format:"int64"},resourceVersion:{description:"String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",type:"string"},selfLink:{description:"Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",type:"string"}}}}}},"application/json;stream=watch":{schema:{description:"KeyPairList is a list of KeyPair resources",type:"object",required:["metadata","items","kind","apiVersion"],properties:{apiVersion:{description:"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",type:"string"},items:{type:"array",items:{default:{},type:"object",required:["spec","kind","apiVersion"],properties:{apiVersion:{description:"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",type:"string"},kind:{description:"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",type:"string"},metadata:{default:{},description:"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",type:"object",required:["name"],properties:{name:{description:"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",type:"string"},namespace:{description:'Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces',type:"string"}}},spec:{default:{},type:"object",required:["publicKey"],properties:{publicKey:{type:"string",default:""}}},status:{default:{},type:"object",properties:{conditions:{type:"array",items:{default:{},type:"object",required:["type","status"],properties:{lastTransitionTime:{description:"Last time the condition transitioned from one status to another.",type:"string"},lastUpdateTime:{description:"The last time this condition was updated.",type:"string"},message:{description:"Human-readable message indicating details about last transition",type:"string"},reason:{description:"The reason for the condition's last transition.",type:"string"},status:{description:"Status of the condition, one of True, False, Unknown.",type:"string",default:""},type:{description:"Type of the condition.",type:"string",default:""}}}},fingerPrint:{type:"string"}}}}}},kind:{description:"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",type:"string"},metadata:{default:{},description:"ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",type:"object",properties:{continue:{description:"continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",type:"string"},remainingItemCount:{description:"remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",type:"integer",format:"int64"},resourceVersion:{description:"String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",type:"string"},selfLink:{description:"Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",type:"string"}}}}}}}},401:{description:"Unauthorized",content:{"application/json":{schema:{type:"string"}},"application/yaml":{schema:{type:"string"}},"application/json;stream=watch":{schema:{type:"string"}}}}},parameters:[{description:"The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",name:"continue",in:"query",schema:{type:"string",uniqueItems:!0}},{description:"A selector to restrict the list of returned objects by their fields. Defaults to everything.",name:"fieldSelector",in:"query",schema:{type:"string",uniqueItems:!0}},{description:"If true, partially initialized resources are included in the response.",name:"includeUninitialized",in:"query",schema:{type:"boolean",uniqueItems:!0}},{description:"A selector to restrict the list of returned objects by their labels. Defaults to everything",name:"labelSelector",in:"query",schema:{type:"string",uniqueItems:!0}},{description:"limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",name:"limit",in:"query",schema:{type:"integer",uniqueItems:!0}},{description:"When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",name:"resourceVersion",in:"query",schema:{type:"string",uniqueItems:!0}},{description:"TimeoutSeconds for the list/watch call.",name:"timeoutSeconds",in:"query",schema:{type:"integer",uniqueItems:!0}},{description:"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",name:"watch",in:"query",schema:{type:"boolean",uniqueItems:!0}}],method:"get",path:"/apis/harvesterhci.io/v1beta1/keypairs",servers:[{url:"//harvester.api.server"}],info:{title:"Harvester APIs",version:"v1beta1"},postman:{name:"list Key Pair For All Namespaces",description:{content:"Get a list of all KeyPair objects.",type:"text/plain"},url:{path:["apis","harvesterhci.io","v1beta1","keypairs"],host:["{{baseUrl}}"],query:[{disabled:!1,description:{content:"The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",type:"text/plain"},key:"continue",value:""},{disabled:!1,description:{content:"A selector to restrict the list of returned objects by their fields. Defaults to everything.",type:"text/plain"},key:"fieldSelector",value:""},{disabled:!1,description:{content:"If true, partially initialized resources are included in the response.",type:"text/plain"},key:"includeUninitialized",value:""},{disabled:!1,description:{content:"A selector to restrict the list of returned objects by their labels. Defaults to everything",type:"text/plain"},key:"labelSelector",value:""},{disabled:!1,description:{content:"limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",type:"text/plain"},key:"limit",value:""},{disabled:!1,description:{content:"When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",type:"text/plain"},key:"resourceVersion",value:""},{disabled:!1,description:{content:"TimeoutSeconds for the list/watch call.",type:"text/plain"},key:"timeoutSeconds",value:""},{disabled:!1,description:{content:"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",type:"text/plain"},key:"watch",value:""}],variable:[]},header:[{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"api/harvester-apis",custom_edit_url:null,hide_send_button:!0},sidebar:"sidebar",previous:{title:"listPersistentVolumeClaimForAllNamespaces",permalink:"/zh/dev/api/list-persistent-volume-claim-for-all-namespaces"},next:{title:"listNamespacedKeyPair",permalink:"/zh/dev/api/list-namespaced-key-pair"}},v={},k=[{value:"Request",id:"request",level:2}],q={toc:k},_="wrapper";function w(e){let{components:t,...s}=e;return(0,a.kt)(_,(0,i.Z)({},q,s,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{className:"openapi__heading"},"listKeyPairForAllNamespaces"),(0,a.kt)(o(),{method:"get",path:"/apis/harvesterhci.io/v1beta1/keypairs",mdxType:"MethodEndpoint"}),(0,a.kt)(c(),{infoPath:"api/harvester-apis",mdxType:"SecuritySchemes"}),(0,a.kt)("p",null,"Get a list of all KeyPair objects."),(0,a.kt)("h2",{id:"request"},"Request"),(0,a.kt)("details",{style:{marginBottom:"1rem"},className:"openapi-markdown__details","data-collapsed":!1,open:!0},(0,a.kt)("summary",{style:{}},(0,a.kt)("h3",{className:"openapi-markdown__details-summary-header-params"},"Query Parameters")),(0,a.kt)("div",null,(0,a.kt)("ul",null,(0,a.kt)(u.Z,{className:"paramsItem",param:{description:"The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",name:"continue",in:"query",schema:{type:"string",uniqueItems:!0}},mdxType:"ParamsItem"}),(0,a.kt)(u.Z,{className:"paramsItem",param:{description:"A selector to restrict the list of returned objects by their fields. Defaults to everything.",name:"fieldSelector",in:"query",schema:{type:"string",uniqueItems:!0}},mdxType:"ParamsItem"}),(0,a.kt)(u.Z,{className:"paramsItem",param:{description:"If true, partially initialized resources are included in the response.",name:"includeUninitialized",in:"query",schema:{type:"boolean",uniqueItems:!0}},mdxType:"ParamsItem"}),(0,a.kt)(u.Z,{className:"paramsItem",param:{description:"A selector to restrict the list of returned objects by their labels. Defaults to everything",name:"labelSelector",in:"query",schema:{type:"string",uniqueItems:!0}},mdxType:"ParamsItem"}),(0,a.kt)(u.Z,{className:"paramsItem",param:{description:"limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",name:"limit",in:"query",schema:{type:"integer",uniqueItems:!0}},mdxType:"ParamsItem"}),(0,a.kt)(u.Z,{className:"paramsItem",param:{description:"When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",name:"resourceVersion",in:"query",schema:{type:"string",uniqueItems:!0}},mdxType:"ParamsItem"}),(0,a.kt)(u.Z,{className:"paramsItem",param:{description:"TimeoutSeconds for the list/watch call.",name:"timeoutSeconds",in:"query",schema:{type:"integer",uniqueItems:!0}},mdxType:"ParamsItem"}),(0,a.kt)(u.Z,{className:"paramsItem",param:{description:"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",name:"watch",in:"query",schema:{type:"boolean",uniqueItems:!0}},mdxType:"ParamsItem"})))),(0,a.kt)("div",null,(0,a.kt)("div",null,(0,a.kt)(n.Z,{mdxType:"ApiTabs"},(0,a.kt)(f.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,a.kt)("div",null,(0,a.kt)("p",null,"OK")),(0,a.kt)("div",null,(0,a.kt)(m.Z,{className:"openapi-tabs__mime",schemaType:"response",mdxType:"MimeTabs"},(0,a.kt)(f.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,a.kt)(h.Z,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,a.kt)(f.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,a.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,a.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,a.kt)("strong",null,"Schema")),(0,a.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,a.kt)("ul",{style:{marginLeft:"1rem"}},(0,a.kt)(p.Z,{collapsible:!1,name:"apiVersion",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",type:"string"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{},className:"openapi-markdown__details"},(0,a.kt)("summary",{style:{}},(0,a.kt)("span",{className:"openapi-schema__container"},(0,a.kt)("strong",{className:"openapi-schema__property"},"items"),(0,a.kt)("span",{className:"openapi-schema__name"}," object[]"),(0,a.kt)("span",{className:"openapi-schema__divider"}),(0,a.kt)("span",{className:"openapi-schema__required"},"required"))),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)("li",null,(0,a.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,a.kt)(p.Z,{collapsible:!1,name:"apiVersion",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",type:"string"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!1,name:"kind",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",type:"string"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{},className:"openapi-markdown__details"},(0,a.kt)("summary",{style:{}},(0,a.kt)("span",{className:"openapi-schema__container"},(0,a.kt)("strong",{className:"openapi-schema__property"},"metadata"),(0,a.kt)("span",{className:"openapi-schema__name"}," object"))),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,a.kt)("p",null,"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.")),(0,a.kt)(p.Z,{collapsible:!1,name:"name",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",type:"string"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!1,name:"namespace",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:'Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces',type:"string"},mdxType:"SchemaItem"})))),(0,a.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{},className:"openapi-markdown__details"},(0,a.kt)("summary",{style:{}},(0,a.kt)("span",{className:"openapi-schema__container"},(0,a.kt)("strong",{className:"openapi-schema__property"},"spec"),(0,a.kt)("span",{className:"openapi-schema__name"}," object"),(0,a.kt)("span",{className:"openapi-schema__divider"}),(0,a.kt)("span",{className:"openapi-schema__required"},"required"))),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)(p.Z,{collapsible:!1,name:"publicKey",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",default:""},mdxType:"SchemaItem"})))),(0,a.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{},className:"openapi-markdown__details"},(0,a.kt)("summary",{style:{}},(0,a.kt)("span",{className:"openapi-schema__container"},(0,a.kt)("strong",{className:"openapi-schema__property"},"status"),(0,a.kt)("span",{className:"openapi-schema__name"}," object"))),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{},className:"openapi-markdown__details"},(0,a.kt)("summary",{style:{}},(0,a.kt)("span",{className:"openapi-schema__container"},(0,a.kt)("strong",{className:"openapi-schema__property"},"conditions"),(0,a.kt)("span",{className:"openapi-schema__name"}," object[]"))),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)("li",null,(0,a.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,a.kt)(p.Z,{collapsible:!1,name:"lastTransitionTime",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Last time the condition transitioned from one status to another.",type:"string"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!1,name:"lastUpdateTime",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"The last time this condition was updated.",type:"string"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!1,name:"message",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Human-readable message indicating details about last transition",type:"string"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!1,name:"reason",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"The reason for the condition's last transition.",type:"string"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!1,name:"status",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Status of the condition, one of True, False, Unknown.",type:"string",default:""},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!1,name:"type",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Type of the condition.",type:"string",default:""},mdxType:"SchemaItem"}),(0,a.kt)("li",null,(0,a.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]"))))),(0,a.kt)(p.Z,{collapsible:!1,name:"fingerPrint",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"})))),(0,a.kt)("li",null,(0,a.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]"))))),(0,a.kt)(p.Z,{collapsible:!1,name:"kind",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",type:"string"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{},className:"openapi-markdown__details"},(0,a.kt)("summary",{style:{}},(0,a.kt)("span",{className:"openapi-schema__container"},(0,a.kt)("strong",{className:"openapi-schema__property"},"metadata"),(0,a.kt)("span",{className:"openapi-schema__name"}," object"),(0,a.kt)("span",{className:"openapi-schema__divider"}),(0,a.kt)("span",{className:"openapi-schema__required"},"required"))),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,a.kt)("p",null,"ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.")),(0,a.kt)(p.Z,{collapsible:!1,name:"continue",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",type:"string"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!1,name:"remainingItemCount",required:!1,schemaName:"int64",qualifierMessage:void 0,schema:{description:"remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",type:"integer",format:"int64"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!1,name:"resourceVersion",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",type:"string"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!1,name:"selfLink",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",type:"string"},mdxType:"SchemaItem"}))))))),(0,a.kt)(f.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,a.kt)(d.Z,{responseExample:'{\n  "apiVersion": "string",\n  "items": [\n    {\n      "apiVersion": "string",\n      "kind": "string",\n      "metadata": {\n        "name": "string",\n        "namespace": "string"\n      },\n      "spec": {\n        "publicKey": "string"\n      },\n      "status": {\n        "conditions": [\n          {\n            "lastTransitionTime": "string",\n            "lastUpdateTime": "string",\n            "message": "string",\n            "reason": "string",\n            "status": "string",\n            "type": "string"\n          }\n        ],\n        "fingerPrint": "string"\n      }\n    }\n  ],\n  "kind": "string",\n  "metadata": {\n    "continue": "string",\n    "remainingItemCount": 0,\n    "resourceVersion": "string",\n    "selfLink": "string"\n  }\n}',language:"json",mdxType:"ResponseSamples"})))),(0,a.kt)(f.Z,{label:"application/yaml",value:"application/yaml",mdxType:"TabItem"},(0,a.kt)(h.Z,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,a.kt)(f.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,a.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,a.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,a.kt)("strong",null,"Schema")),(0,a.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,a.kt)("ul",{style:{marginLeft:"1rem"}},(0,a.kt)(p.Z,{collapsible:!1,name:"apiVersion",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",type:"string"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{},className:"openapi-markdown__details"},(0,a.kt)("summary",{style:{}},(0,a.kt)("span",{className:"openapi-schema__container"},(0,a.kt)("strong",{className:"openapi-schema__property"},"items"),(0,a.kt)("span",{className:"openapi-schema__name"}," object[]"),(0,a.kt)("span",{className:"openapi-schema__divider"}),(0,a.kt)("span",{className:"openapi-schema__required"},"required"))),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)("li",null,(0,a.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,a.kt)(p.Z,{collapsible:!1,name:"apiVersion",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",type:"string"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!1,name:"kind",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",type:"string"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{},className:"openapi-markdown__details"},(0,a.kt)("summary",{style:{}},(0,a.kt)("span",{className:"openapi-schema__container"},(0,a.kt)("strong",{className:"openapi-schema__property"},"metadata"),(0,a.kt)("span",{className:"openapi-schema__name"}," object"))),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,a.kt)("p",null,"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.")),(0,a.kt)(p.Z,{collapsible:!1,name:"name",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",type:"string"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!1,name:"namespace",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:'Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces',type:"string"},mdxType:"SchemaItem"})))),(0,a.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{},className:"openapi-markdown__details"},(0,a.kt)("summary",{style:{}},(0,a.kt)("span",{className:"openapi-schema__container"},(0,a.kt)("strong",{className:"openapi-schema__property"},"spec"),(0,a.kt)("span",{className:"openapi-schema__name"}," object"),(0,a.kt)("span",{className:"openapi-schema__divider"}),(0,a.kt)("span",{className:"openapi-schema__required"},"required"))),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)(p.Z,{collapsible:!1,name:"publicKey",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",default:""},mdxType:"SchemaItem"})))),(0,a.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{},className:"openapi-markdown__details"},(0,a.kt)("summary",{style:{}},(0,a.kt)("span",{className:"openapi-schema__container"},(0,a.kt)("strong",{className:"openapi-schema__property"},"status"),(0,a.kt)("span",{className:"openapi-schema__name"}," object"))),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{},className:"openapi-markdown__details"},(0,a.kt)("summary",{style:{}},(0,a.kt)("span",{className:"openapi-schema__container"},(0,a.kt)("strong",{className:"openapi-schema__property"},"conditions"),(0,a.kt)("span",{className:"openapi-schema__name"}," object[]"))),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)("li",null,(0,a.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,a.kt)(p.Z,{collapsible:!1,name:"lastTransitionTime",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Last time the condition transitioned from one status to another.",type:"string"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!1,name:"lastUpdateTime",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"The last time this condition was updated.",type:"string"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!1,name:"message",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Human-readable message indicating details about last transition",type:"string"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!1,name:"reason",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"The reason for the condition's last transition.",type:"string"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!1,name:"status",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Status of the condition, one of True, False, Unknown.",type:"string",default:""},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!1,name:"type",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Type of the condition.",type:"string",default:""},mdxType:"SchemaItem"}),(0,a.kt)("li",null,(0,a.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]"))))),(0,a.kt)(p.Z,{collapsible:!1,name:"fingerPrint",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"})))),(0,a.kt)("li",null,(0,a.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]"))))),(0,a.kt)(p.Z,{collapsible:!1,name:"kind",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",type:"string"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{},className:"openapi-markdown__details"},(0,a.kt)("summary",{style:{}},(0,a.kt)("span",{className:"openapi-schema__container"},(0,a.kt)("strong",{className:"openapi-schema__property"},"metadata"),(0,a.kt)("span",{className:"openapi-schema__name"}," object"),(0,a.kt)("span",{className:"openapi-schema__divider"}),(0,a.kt)("span",{className:"openapi-schema__required"},"required"))),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,a.kt)("p",null,"ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.")),(0,a.kt)(p.Z,{collapsible:!1,name:"continue",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",type:"string"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!1,name:"remainingItemCount",required:!1,schemaName:"int64",qualifierMessage:void 0,schema:{description:"remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",type:"integer",format:"int64"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!1,name:"resourceVersion",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",type:"string"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!1,name:"selfLink",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",type:"string"},mdxType:"SchemaItem"}))))))),(0,a.kt)(f.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,a.kt)(d.Z,{responseExample:'{\n  "apiVersion": "string",\n  "items": [\n    {\n      "apiVersion": "string",\n      "kind": "string",\n      "metadata": {\n        "name": "string",\n        "namespace": "string"\n      },\n      "spec": {\n        "publicKey": "string"\n      },\n      "status": {\n        "conditions": [\n          {\n            "lastTransitionTime": "string",\n            "lastUpdateTime": "string",\n            "message": "string",\n            "reason": "string",\n            "status": "string",\n            "type": "string"\n          }\n        ],\n        "fingerPrint": "string"\n      }\n    }\n  ],\n  "kind": "string",\n  "metadata": {\n    "continue": "string",\n    "remainingItemCount": 0,\n    "resourceVersion": "string",\n    "selfLink": "string"\n  }\n}',language:"json",mdxType:"ResponseSamples"})))),(0,a.kt)(f.Z,{label:"application/json;stream=watch",value:"application/json;stream=watch",mdxType:"TabItem"},(0,a.kt)(h.Z,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,a.kt)(f.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,a.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,a.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,a.kt)("strong",null,"Schema")),(0,a.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,a.kt)("ul",{style:{marginLeft:"1rem"}},(0,a.kt)(p.Z,{collapsible:!1,name:"apiVersion",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",type:"string"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{},className:"openapi-markdown__details"},(0,a.kt)("summary",{style:{}},(0,a.kt)("span",{className:"openapi-schema__container"},(0,a.kt)("strong",{className:"openapi-schema__property"},"items"),(0,a.kt)("span",{className:"openapi-schema__name"}," object[]"),(0,a.kt)("span",{className:"openapi-schema__divider"}),(0,a.kt)("span",{className:"openapi-schema__required"},"required"))),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)("li",null,(0,a.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,a.kt)(p.Z,{collapsible:!1,name:"apiVersion",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",type:"string"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!1,name:"kind",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",type:"string"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{},className:"openapi-markdown__details"},(0,a.kt)("summary",{style:{}},(0,a.kt)("span",{className:"openapi-schema__container"},(0,a.kt)("strong",{className:"openapi-schema__property"},"metadata"),(0,a.kt)("span",{className:"openapi-schema__name"}," object"))),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,a.kt)("p",null,"ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.")),(0,a.kt)(p.Z,{collapsible:!1,name:"name",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",type:"string"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!1,name:"namespace",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:'Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces',type:"string"},mdxType:"SchemaItem"})))),(0,a.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{},className:"openapi-markdown__details"},(0,a.kt)("summary",{style:{}},(0,a.kt)("span",{className:"openapi-schema__container"},(0,a.kt)("strong",{className:"openapi-schema__property"},"spec"),(0,a.kt)("span",{className:"openapi-schema__name"}," object"),(0,a.kt)("span",{className:"openapi-schema__divider"}),(0,a.kt)("span",{className:"openapi-schema__required"},"required"))),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)(p.Z,{collapsible:!1,name:"publicKey",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",default:""},mdxType:"SchemaItem"})))),(0,a.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{},className:"openapi-markdown__details"},(0,a.kt)("summary",{style:{}},(0,a.kt)("span",{className:"openapi-schema__container"},(0,a.kt)("strong",{className:"openapi-schema__property"},"status"),(0,a.kt)("span",{className:"openapi-schema__name"}," object"))),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{},className:"openapi-markdown__details"},(0,a.kt)("summary",{style:{}},(0,a.kt)("span",{className:"openapi-schema__container"},(0,a.kt)("strong",{className:"openapi-schema__property"},"conditions"),(0,a.kt)("span",{className:"openapi-schema__name"}," object[]"))),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)("li",null,(0,a.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,a.kt)(p.Z,{collapsible:!1,name:"lastTransitionTime",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Last time the condition transitioned from one status to another.",type:"string"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!1,name:"lastUpdateTime",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"The last time this condition was updated.",type:"string"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!1,name:"message",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Human-readable message indicating details about last transition",type:"string"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!1,name:"reason",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"The reason for the condition's last transition.",type:"string"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!1,name:"status",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Status of the condition, one of True, False, Unknown.",type:"string",default:""},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!1,name:"type",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Type of the condition.",type:"string",default:""},mdxType:"SchemaItem"}),(0,a.kt)("li",null,(0,a.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]"))))),(0,a.kt)(p.Z,{collapsible:!1,name:"fingerPrint",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"})))),(0,a.kt)("li",null,(0,a.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]"))))),(0,a.kt)(p.Z,{collapsible:!1,name:"kind",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",type:"string"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,a.kt)("details",{style:{},className:"openapi-markdown__details"},(0,a.kt)("summary",{style:{}},(0,a.kt)("span",{className:"openapi-schema__container"},(0,a.kt)("strong",{className:"openapi-schema__property"},"metadata"),(0,a.kt)("span",{className:"openapi-schema__name"}," object"),(0,a.kt)("span",{className:"openapi-schema__divider"}),(0,a.kt)("span",{className:"openapi-schema__required"},"required"))),(0,a.kt)("div",{style:{marginLeft:"1rem"}},(0,a.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,a.kt)("p",null,"ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.")),(0,a.kt)(p.Z,{collapsible:!1,name:"continue",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",type:"string"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!1,name:"remainingItemCount",required:!1,schemaName:"int64",qualifierMessage:void 0,schema:{description:"remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",type:"integer",format:"int64"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!1,name:"resourceVersion",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",type:"string"},mdxType:"SchemaItem"}),(0,a.kt)(p.Z,{collapsible:!1,name:"selfLink",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.",type:"string"},mdxType:"SchemaItem"}))))))),(0,a.kt)(f.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,a.kt)(d.Z,{responseExample:'{\n  "apiVersion": "string",\n  "items": [\n    {\n      "apiVersion": "string",\n      "kind": "string",\n      "metadata": {\n        "name": "string",\n        "namespace": "string"\n      },\n      "spec": {\n        "publicKey": "string"\n      },\n      "status": {\n        "conditions": [\n          {\n            "lastTransitionTime": "string",\n            "lastUpdateTime": "string",\n            "message": "string",\n            "reason": "string",\n            "status": "string",\n            "type": "string"\n          }\n        ],\n        "fingerPrint": "string"\n      }\n    }\n  ],\n  "kind": "string",\n  "metadata": {\n    "continue": "string",\n    "remainingItemCount": 0,\n    "resourceVersion": "string",\n    "selfLink": "string"\n  }\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,a.kt)(f.Z,{label:"401",value:"401",mdxType:"TabItem"},(0,a.kt)("div",null,(0,a.kt)("p",null,"Unauthorized")),(0,a.kt)("div",null,(0,a.kt)(m.Z,{className:"openapi-tabs__mime",schemaType:"response",mdxType:"MimeTabs"},(0,a.kt)(f.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,a.kt)(h.Z,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,a.kt)(f.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,a.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,a.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,a.kt)("strong",null,"Schema")),(0,a.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,a.kt)("ul",{style:{marginLeft:"1rem"}},(0,a.kt)("li",null,(0,a.kt)("div",null,(0,a.kt)("strong",null,"string")))))))),(0,a.kt)(f.Z,{label:"application/yaml",value:"application/yaml",mdxType:"TabItem"},(0,a.kt)(h.Z,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,a.kt)(f.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,a.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,a.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,a.kt)("strong",null,"Schema")),(0,a.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,a.kt)("ul",{style:{marginLeft:"1rem"}},(0,a.kt)("li",null,(0,a.kt)("div",null,(0,a.kt)("strong",null,"string")))))))),(0,a.kt)(f.Z,{label:"application/json;stream=watch",value:"application/json;stream=watch",mdxType:"TabItem"},(0,a.kt)(h.Z,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,a.kt)(f.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,a.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,a.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,a.kt)("strong",null,"Schema")),(0,a.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,a.kt)("ul",{style:{marginLeft:"1rem"}},(0,a.kt)("li",null,(0,a.kt)("div",null,(0,a.kt)("strong",null,"string")))))))))))))))}w.isMDXComponent=!0}}]);